# Copyright (c) 2016 Marco Buzzanca 
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.


# Modified code for just minimal pulsating arch logo

Window.SetBackgroundTopColor(0.0, 0.0, 0.0);
Window.SetBackgroundBottomColor(0.0, 0.0, 0.0);

logo.image = Image("logo.png");
logo.x = Window.GetWidth() / 2 - logo.image.GetWidth() / 2;
logo.y = Window.GetHeight() / 2 - logo.image.GetHeight() / 2;
logo.minOpacity = 0.3;
logo.opacityAngle = 0.0;

logo.sprite = Sprite(logo.image);
logo.sprite.SetPosition(logo.x, logo.y, 0);

fun refresh()
{
    # Pulsating logo animation
    # 0.5 Hz pulsating rate
    logo.opacityAngle += ((2 * 3.14) / 50) * 0.5; 

    opacity = (Math.Cos(logo.opacityAngle) + 1) / 2;
    opacity *= 1 - logo.minOpacity;
    opacity += logo.minOpacity;

    logo.sprite.SetOpacity(opacity);
}

Plymouth.SetRefreshFunction(refresh);

# Display only the pulsating logo when turning off and on
fun quit_callback ()
{
  logo.sprite.SetOpacity (1);
}

Plymouth.SetQuitFunction(quit_callback);
